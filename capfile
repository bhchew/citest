load 'deploy'

# ================================================================
# ROLES
# ================================================================


    role :app, "localhost:22"
  

# ================================================================
# VARIABLES
# ================================================================

# Webistrano defaults
  set :webistrano_project, "some_project"
  set :webistrano_stage, "dev"


  set :application, "some_project"

  set :deploy_to, "/tmp/"

  set :deploy_via, :remote_cache

  #set :files_dir, "/var/www/html/shared"

  set :password, "some-password"

  set :repository, "."

  set :runner, "user to run as with sudo"

  set :scm, "git"

  set :scm_password, "some-password"

  set :scm_username, "git"

  set :site_env, "DEV"

  set :site_name, "some_project"

  set :use_sudo, false

  set :user, "git"

  set :branch, "master"

  #set(:branch) do
  #  Capistrano::CLI.ui.ask "Please enter 'branch': "
  #end

# ================================================================
# TEMPLATE TASKS
# ================================================================

        # allocate a pty by default as some systems have problems without
        default_run_options[:pty] = true
      
        # set Net::SSH ssh options through normal variables
        # at the moment only one SSH key is supported as arrays are not
        # parsed correctly by Webistrano::Deployer.type_cast (they end up as strings)
        [:ssh_port, :ssh_keys].each do |ssh_opt|
          if exists? ssh_opt
            logger.important("SSH options: setting #{ssh_opt} to: #{fetch(ssh_opt)}")
            ssh_options[ssh_opt.to_s.gsub(/ssh_/, '').to_sym] = fetch(ssh_opt)
          end
        end
      
         namespace :deploy do
           task :restart, :roles => :app, :except => { :no_release => true } do
             # do nothing
           end

           task :start, :roles => :app, :except => { :no_release => true } do
             # do nothing
           end

           task :stop, :roles => :app, :except => { :no_release => true } do
             # do nothing
           end
         end


# ================================================================
# CUSTOM RECIPES
# ================================================================

  after "symlinking:symlink_settings", "deploy:cleanup"